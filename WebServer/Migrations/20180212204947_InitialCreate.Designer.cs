// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using MySql.Data.EntityFrameworkCore.Storage.Internal;
using System;
using WebServer.Model;

namespace WebServer.Migrations
{
    [DbContext(typeof(MenuDbContext))]
    [Migration("20180212204947_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.0.1-rtm-125");

            modelBuilder.Entity("WebServer.Model.Allergen", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Name")
                        .IsRequired();

                    b.HasKey("Id");

                    b.ToTable("allergenes");

                    b.HasAnnotation("MySQL:Collation", "utf8_czech_ci");
                });

            modelBuilder.Entity("WebServer.Model.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Name")
                        .HasColumnType("varchar(200)");

                    b.Property<int?>("ParentId");

                    b.HasKey("Id");

                    b.ToTable("Category");

                    b.HasAnnotation("MySQL:Collation", "utf8_czech_ci");
                });

            modelBuilder.Entity("WebServer.Model.Food", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<decimal>("Carbohydrates")
                        .HasColumnType("decimal(5, 2)");

                    b.Property<int>("CategoryId");

                    b.Property<string>("Composition");

                    b.Property<int>("EnergyKcal");

                    b.Property<int>("EnergyKj");

                    b.Property<decimal>("Fiber")
                        .HasColumnType("decimal(5, 2)");

                    b.Property<int>("Gram");

                    b.Property<string>("Name")
                        .HasColumnType("varchar(200)");

                    b.Property<decimal>("Price");

                    b.Property<decimal>("Protein")
                        .HasColumnType("decimal(5, 2)");

                    b.Property<decimal>("Salt")
                        .HasColumnType("decimal(5, 2)");

                    b.Property<decimal>("SaturatedFat")
                        .HasColumnType("decimal(5, 2)");

                    b.Property<decimal>("Sugar")
                        .HasColumnType("decimal(5, 2)");

                    b.Property<decimal>("TotalFat")
                        .HasColumnType("decimal(5, 2)");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.ToTable("food");

                    b.HasAnnotation("MySQL:Collation", "utf8_czech_ci");
                });

            modelBuilder.Entity("WebServer.Model.FoodAllergen", b =>
                {
                    b.Property<int>("FoodId");

                    b.Property<int>("AllergenId");

                    b.HasKey("FoodId", "AllergenId");

                    b.HasIndex("AllergenId");

                    b.ToTable("food_allergen");
                });

            modelBuilder.Entity("WebServer.Model.Order", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("OrderedAt");

                    b.Property<decimal>("TotalPrice");

                    b.Property<int>("UserId");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("orders");

                    b.HasAnnotation("MySQL:Collation", "utf8_czech_ci");
                });

            modelBuilder.Entity("WebServer.Model.OrderFood", b =>
                {
                    b.Property<int>("FoodId");

                    b.Property<int>("OrderId");

                    b.Property<int>("FoodCount");

                    b.HasKey("FoodId", "OrderId");

                    b.HasIndex("OrderId");

                    b.ToTable("order_has_food");
                });

            modelBuilder.Entity("WebServer.Model.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("CreatedDateTime");

                    b.Property<string>("Email")
                        .HasColumnType("varchar(200)");

                    b.Property<string>("PasswordHash");

                    b.HasKey("Id");

                    b.ToTable("User");

                    b.HasAnnotation("MySQL:Collation", "utf8_czech_ci");
                });

            modelBuilder.Entity("WebServer.Model.Food", b =>
                {
                    b.HasOne("WebServer.Model.Category", "Category")
                        .WithMany("Food")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("WebServer.Model.FoodAllergen", b =>
                {
                    b.HasOne("WebServer.Model.Allergen", "Allergen")
                        .WithMany("FoodAllergen")
                        .HasForeignKey("AllergenId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("WebServer.Model.Food", "Food")
                        .WithMany("FoodAllergen")
                        .HasForeignKey("FoodId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("WebServer.Model.Order", b =>
                {
                    b.HasOne("WebServer.Model.User", "User")
                        .WithMany("Order")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("WebServer.Model.OrderFood", b =>
                {
                    b.HasOne("WebServer.Model.Food", "Food")
                        .WithMany("OrderFood")
                        .HasForeignKey("FoodId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("WebServer.Model.Order", "Order")
                        .WithMany("OrderFood")
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
